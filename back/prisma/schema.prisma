// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model socios {
  id                Int         @id @unique @default(autoincrement())
  nombre            String
  direccion         String?
  telefono          String?     
  email             String?     @unique
  libro_prestado    libros?     @relation(fields: [libro_prestado_id], references: [id])
  libro_prestado_id Int? // Clave foránea opcional para permitir socios sin libros prestados
  prestamos         prestamos[] // Relación con la tabla de préstamos
}

model libros {
  id               Int         @id @unique @default(autoincrement())
  titulo           String      @unique
  autor            String
  genero           String
  anio_publicacion Int
  cant_paginas     Int
  cant_ejemplares  Int
  disponibilidad   Boolean     @default(true)
  socios           socios[] // Relación inversa: socios que tienen este libro
  prestamos        prestamos[] // Relación con la tabla de préstamos
}

model prestamos {
  id               Int       @id @unique @default(autoincrement())
  socio            socios    @relation(fields: [socio_id], references: [id])
  socio_id         Int       // Clave foránea hacia la tabla socio
  libro            libros    @relation(fields: [libro_id], references: [id])
  libro_id         Int       @unique// Clave foránea hacia la tabla libros
  fecha_prestamo   DateTime  @default(now())
  fecha_devolucion DateTime
}
